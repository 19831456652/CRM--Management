<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Test.api</name>
    </assembly>
    <members>
        <member name="T:Test.api.Controllers.BranchController">
            <summary>
             部门控制器
            </summary>
        </member>
        <member name="M:Test.api.Controllers.BranchController.#ctor(CustomerManagement.IBLL.Branch.IBranchManage)">
            <summary>
             重写控制器
            </summary>
            <param name="branchManage"></param>
        </member>
        <member name="M:Test.api.Controllers.BranchController.GetAllBranch">
            <summary>
             获取所有部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.BranchController.CreateBranch(CustomerManagement.ViewModel.Branch.BranchViewModel)">
            <summary>
             添加
            </summary>
            <param name="model">模型</param>
            <returns></returns>
        </member>
        <member name="T:Test.api.Controllers.EmployeesController">
            <summary>
             员工控制器
            </summary>
        </member>
        <member name="M:Test.api.Controllers.EmployeesController.#ctor(CustomerManagement.IBLL.IEmployees.IEmployeesManage)">
            <summary>
            重写控制器
            </summary>
            <param name="employeesManage"></param>
        </member>
        <member name="M:Test.api.Controllers.EmployeesController.Login(CustomerManagement.ViewModel.Employee.LoginViewModel)">
            <summary>
             登录
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.EmployeesController.Register(CustomerManagement.ViewModel.Employee.EmployeesViewModel)">
            <summary>
             注册
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.EmployeesController.GetAllUserAsync">
            <summary>
            获取所有用户数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Test.api.Controllers.EmployeesOrRoleController">
            <summary>
             员工角色控制器
            </summary>
        </member>
        <member name="M:Test.api.Controllers.EmployeesOrRoleController.#ctor(CustomerManagement.IBLL.Role.IEmployeesOrRoleManage)">
            <summary>
             重写控制器
            </summary>
            <param name="employeesOrRole"></param>
        </member>
        <member name="M:Test.api.Controllers.EmployeesOrRoleController.GetAllRoleOrMenu">
            <summary>
             获取所有数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.EmployeesOrRoleController.CreateData(CustomerManagement.ViewModel.Role.EmployeesOrRoleViewModel)">
            <summary>
             添加数据
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Test.api.Controllers.MenuController">
            <summary>
             菜单控制器
            </summary>
        </member>
        <member name="M:Test.api.Controllers.MenuController.#ctor(CustomerManagement.IBLL.Menu.IMenuManage)">
            <summary>
             重写控制器
            </summary>
            <param name="menuManagement"></param>
        </member>
        <member name="M:Test.api.Controllers.MenuController.GetMenu">
            <summary>
             获取所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.MenuController.GetRoleMenu(CustomerManagement.ViewModel.Employee.MenuViewModel)">
            <summary>
             根据角色获取菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Test.api.Controllers.RoleController">
            <summary>
             角色控制器
            </summary>
        </member>
        <member name="M:Test.api.Controllers.RoleController.#ctor(CustomerManagement.IBLL.Role.IRoleManage)">
            <summary>
             重写控制器
            </summary>
            <param name="roleManage"></param>
        </member>
        <member name="M:Test.api.Controllers.RoleController.GetAllRole">
            <summary>
             获取所有角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.RoleController.CreateAllRole(CustomerManagement.ViewModel.Role.RoleViewModel)">
            <summary>
             添加角色信息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Test.api.Controllers.RoleOrMenuController">
            <summary>
             角色菜单关系控制器
            </summary>
        </member>
        <member name="M:Test.api.Controllers.RoleOrMenuController.#ctor(CustomerManagement.IBLL.Role.IRoleOrMenuManage)">
            <summary>
             重写控制器
            </summary>
            <param name="roleOrMenu"></param>
        </member>
        <member name="M:Test.api.Controllers.RoleOrMenuController.GetAllRoleOrMenu">
            <summary>
             获取所有数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Test.api.Controllers.RoleOrMenuController.CreateData(CustomerManagement.ViewModel.Role.RoleOrMenuViewModel)">
            <summary>
             添加数据
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Test.api.Enum.ClientLevelEnum">
            <summary>
             客户级别 枚举
            </summary>
        </member>
        <member name="F:Test.api.Enum.ClientLevelEnum.A重点客户">
            <summary>
             重点客户
            </summary>
        </member>
        <member name="F:Test.api.Enum.ClientLevelEnum.B普通客户">
            <summary>
             B普通客户
            </summary>
        </member>
        <member name="F:Test.api.Enum.ClientLevelEnum.C非优先客户">
            <summary>
             C非优先客户
            </summary>
        </member>
        <member name="T:Test.api.Enum.ClientStateEnum">
            <summary>
             客户状态 枚举
            </summary>
        </member>
        <member name="F:Test.api.Enum.ClientStateEnum.未成交">
            <summary>
             未成交
            </summary>
        </member>
        <member name="F:Test.api.Enum.ClientStateEnum.已成交">
            <summary>
             已成交
            </summary>
        </member>
        <member name="T:Test.api.Tools.EndState">
            <summary>
             结束状态
            </summary>
        </member>
        <member name="P:Test.api.Tools.EndState.Code">
            <summary>
            状态编号
            </summary>
        </member>
        <member name="P:Test.api.Tools.EndState.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Test.api.Tools.EndState.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:Test.api.Tools.JwtFactory">
            <summary>
             JWT
            </summary>
        </member>
        <member name="M:Test.api.Tools.JwtFactory.GetToken(System.Security.Claims.Claim[])">
            <summary>
            加密的 Token 值
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Test.api.Tools.RelyDi">
            <summary>
             依赖注入
            </summary>
        </member>
    </members>
</doc>
